---
# Обновление кеша и установка необходимых пакетов, всего программного обеспечения,
# необходимого для работы нашего сервера
- name: install
  apt: name={{item}} state=present update_cache=yes
  with_items:
    - 'openssl'
    - 'libssl-dev'
    - 'libyaml-dev'
    - 'libcurl4-openssl-dev'
    - 'git'
    - 'libpq-dev'
    - 'libxml2-dev'
    - 'libxslt1-dev'
    - 'build-essential'
    - 'htop'
    - 'vim'
    - 'tmux'
    - 'python3'
    - 'python3-pip'
    - 'apt-transport-https'
    - 'postgresql-client'
    - 'netcat-openbsd'

- name: 'install docker-compose'
  pip:
    name: docker-compose

- name: 'apt | add docker-ce repo key'
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
  tags: docker-ce

- name: 'apt | add docker-ce repo'
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
  tags: docker-ce

- name: 'install docker-ce'
  apt:
    name: docker-ce
    state: latest
    update_cache: yes
  tags: docker-ce

- name: 'DOCKER-COMPOSE | copy config'
  template:
    src: '{{item}}'
    dest: '{{app_path}}'
  with_items:
    - Dockerfile
    - docker-compose.yml
    - web_app.sh
  tags: deploy

- name: 'docker-compose up -d'
  shell: usermod -aG docker $(whoami)
  args:
    chdir: "{{app_path}}/"
  tags: deploy

- name: 'docker stop'
  docker_service: project_src={{app_path}}/ state=absent
  tags: deploy

- name: 'docker-compose up -d'
  shell: docker-compose up -d
  args:
    chdir: "{{app_path}}/"
  tags: deploy

- name: 'owner'
  file:
    path: '{{app_path}}/'
    owner: 'vagrant'
    group: 'vagrant'
  tags: ow

